# Check https://circleci.com/docs/2.0/language-javascript/ for more details

defaults: &defaults
  working_directory: ~/repo
  docker:
      # Use the same Node version as that of AWS Lambda's
    - image: circleci/node:6.10

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}

      - restore_cache:
          key: v1-dependencies-{{ checksum "lambda/custom/package.json" }}

      - run:
          name: Install dependencies
          command: yarn install

      - run:
          name: Install dependencies for Lambda function
          working_directory: lambda/custom
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - save_cache:
          paths:
            - lambda/custom/node_modules
          key: v1-dependencies-{{ checksum "lambda/custom/package.json" }}

      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - lambda/custom/node_modules

  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .

      - run:
          name: Run tests
          command: |
            yarn test

      - run:
          name: Report code coverage
          command: $(yarn bin)/codecov

  deploy:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .

      - deploy:
          name: Deploy Skill
          command: |
            sudo apt-get -y -qq install python3-pip gettext
            sudo pip3 install awscli
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region us-east-1

            sudo npm i ask-cli -g
            mkdir -p ~/.ask
            echo ${ASK_CLI_CONFIG} | base64 -d > ~/.ask/cli_config

            make deploy 

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
            - test 
          filters:
            branches:
              only: master
